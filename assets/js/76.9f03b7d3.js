(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{381:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-summary","aria-hidden":"true"}},[t._v("#")]),t._v(" vue summary")]),t._v(" "),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data","aria-hidden":"true"}},[t._v("#")]),t._v(" data")]),t._v(" "),a("blockquote",[a("p",[t._v("data 里面放组件自身能维护的数据。比如 popover 是否可见")])]),t._v(" "),a("h2",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props","aria-hidden":"true"}},[t._v("#")]),t._v(" props")]),t._v(" "),a("ol",[a("li",[t._v("props 里面放由父组件传回的数据。比如 dataSource 等用户数据，以及组件属性（name,width,height...）")]),t._v(" "),a("li",[t._v("props 里面的数据不许修改，要更新只能通过 $emit 触发，.sync等方式通知父组件处理")]),t._v(" "),a("li",[t._v("一个组件的 props 必须正交")]),t._v(" "),a("li",[t._v("props 不能以 data-　开头")])]),t._v(" "),a("h2",{attrs:{id:"computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed","aria-hidden":"true"}},[t._v("#")]),t._v(" computed")]),t._v(" "),a("ol",[a("li",[t._v("如果某个值的产生需要用到 data/props，我们就把这个值放入 computed 中")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// data1,prop2...变化后，将重新触发 fn,实现对 generatedValue 的更新\ncomputed: {\n    generatedValue: function () {\n        return fn(data1,prop2...)\n    }\n}\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("一般用于Class绑定或Style绑定")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// Class绑定\ncomputed: {\n    toastClasses: function () {\n        return [`position-${this.position}`]\n    }\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// Style绑定\ncomputed: {\n    colStyle() {\n        return {\n            paddingLeft: this.gutter / 2 + 'px',\n            paddingRight: this.gutter / 2 + 'px'\n        }\n    }\n}\n")])])]),a("h2",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch","aria-hidden":"true"}},[t._v("#")]),t._v(" watch")]),t._v(" "),a("ol",[a("li",[t._v("watch 就是定向版的 update()，一旦某个 data/props 发生变化，就立即执行相应操作")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// selectedItems可以是data，也可以是props（由父组件传回）\nwatch:{\n    selectedItems(){\n        if(selectedItems.length<10){\n            console.log(长度小于10)\n        }\n    }\n}\n")])])]),a("p",[t._v("等价于")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("updated(){\n    if(this.selectedItems.length<10){\n        console.log(长度小于10)\n    }\n}\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("watch 与 computed 的区别")])]),t._v(" "),a("blockquote",[a("p",[t._v("computed 的作用是维护一个基于 data/props 的值，而 watch 是善后，是保证某个 data/prop 变化后相应操作能立即跟上。")])]),t._v(" "),a("h2",{attrs:{id:"slots"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slots","aria-hidden":"true"}},[t._v("#")]),t._v(" slots")]),t._v(" "),a("ol",[a("li",[t._v("$slots 要放在 $mount() 之前")]),t._v(" "),a("li",[t._v("如何向组件的slot中插入HTML内容？\n"),a("ul",[a("li",[t._v("这是一种危险的行为（阻止事件冒泡也是一种危险的行为）")]),t._v(" "),a("li",[t._v("实现方法")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div v-html="$slots.default[0]"></div>\n\nvm.$slots.default=[\'这是<strong style="color: blue">toast</strong>信息\']\n')])])])]),t._v(" "),a("li",[t._v("slot-scope\n"),a("ul",[a("li",[t._v("传递属性")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template slot="content" slot-scope="{close}">\n    <g-button  v-on:click.native="close">关闭</g-button>\n</template>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<slot name="content"　:close="closeContent"></slot>\n\nmethods: {\n    closeContent(){\n        ...\n    }\n}\n')])])])])]),t._v(" "),a("ul",[a("li",[t._v("传递对象"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<td>\n    <slot name="content" :xxx="item"></slot>\n</td>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template slot="content" slot-scope="{xxx}">\n    {{xxx.name}}\n</template>\n')])])])]),t._v(" "),a("li",[t._v("slots 外部一般用一个标签包裹起来")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template>\n    ...\n    <div class="wrapper">\n        <slots><slots>\n    </div>\n</template>\n')])])]),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符","aria-hidden":"true"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("h4",{attrs:{id:"sync"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sync","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v(".sync"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("对于")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("this.$emit('update:title', newTitle)\n")])])]),a("p",[t._v("下面两种写法等价")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<text-document :doc.title = $event @update:title="doc.title = $event"></text-document>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<text-document :title.sync="doc.title"></text-document>\n')])])]),a("p",[t._v('也就是说sync的作用是让 title="doc.title" 异步执行多次（响应式）')]),t._v(" "),a("h4",{attrs:{id:"native"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#native","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-custom-events.html#%E5%B0%86%E5%8E%9F%E7%94%9F%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E7%BB%84%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v(".native"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("原生的事件是无法直接添加到组件上的,想要在组件上加原生的DOM事件，必须使用native修饰符")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<g-button  v-on:click.native="close">close</g-button></div>\n')])])]),a("p",[t._v("除了原生的DOM事件，还可能通过$emit触发组件上的事件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<g-button @beEmited="xxx">\n')])])]),a("p",[t._v("beEmited事件是g-button内部的元素点击事件通过emit触发的")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<template>\n    <button @click=\"$emit('beEmited')\"></button>\n</template>\n")])])]),a("h2",{attrs:{id:"父子组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 父子组件")]),t._v(" "),a("h4",{attrs:{id:"父子组件-created-和-mounted-顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件-created-和-mounted-顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 父子组件 created 和 mounted 顺序")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("father.created\nchildren.created\nchildren.mounted\nfather.mounted\n")])])]),a("h4",{attrs:{id:"父子组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件通信","aria-hidden":"true"}},[t._v("#")]),t._v(" 父子组件通信")]),t._v(" "),a("ul",[a("li",[t._v("父组件给子组件传递 props")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<g-collapse :single="true">\n    <g-collapse-item title="标题1" name="1">内容1</g-collapse-item>\n    <g-collapse-item title="标题2" name="2">内容2</g-collapse-item>\n    <g-collapse-item title="标题3" name="3">内容3</g-collapse-item>\n</g-collapse>\n')])])]),a("ul",[a("li",[t._v("父组件根据子组件情况修改父组件 data")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mounted() {\n    this.$children.forEach((vm) => {\n        if (vm.$options.name === 'WheelSider') {\n            this.hasSider = true\n        }\n    })\n}\n")])])]),a("ul",[a("li",[t._v("父组件挑选符合条件的子组件,修改子组件 data")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mounted() {\n\n    // 把父组件的 gutter 传递给子组件\n    this.$children.forEach((vm) => {\n        vm.gutter = this.gutter\n    })\n}\n")])])]),a("ul",[a("li",[t._v("父组件与符合条件的子组件通信")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('this.$children.forEach((vm)=>{\n    if(vm.$options.name==="WheelTabsHead"){\n        vm.$children.forEach((childVm)=>{\n            if(childVm.$options.name=="WheelTabsItem"&&childVm.name==this.selected){\n                this.eventBus&&this.eventBus.$emit(\'update:selected\', this.selected,childVm)\n            }\n        })\n    }\n})\n')])])]),a("blockquote",[a("p",[t._v("注意,由于父子组件挂载顺序的原因,所以在父组件的mounted中进行父子通信是最合适的")])]),t._v(" "),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),a("h4",{attrs:{id:"emit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emit","aria-hidden":"true"}},[t._v("#")]),t._v(" $emit")]),t._v(" "),a("ol",[a("li",[t._v("$emit和$on必须作用在同一实例上")])]),t._v(" "),a("blockquote",[a("p",[t._v("父组件 A 通过 props 的方式向子组件 B 传递，B to A 通过在 B 组件中 $emit, A 组件中 v-on 的方式实现。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// A.vue\n<template>\n    <div>\n        <B @travel="callback"></B>\n        ......\n    </div>\n</template>\n\n\n// B.vue\n<template>\n    <div @click="emit">\n    ......\n    </div>\n</template>\n\nmethods:{\n    emit(){\n        this.$emit(\'travel\')\n    }\n}\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("$emit是不冒泡的")]),t._v(" "),a("li",[t._v("$emit 实现孙子组件向爷爷组件通信")])]),t._v(" "),a("blockquote",[a("p",[t._v("前提：不考虑 eventBus")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<grandPa @fatherSay=\"console.log('ok,grandPa konw it')\">\n    <father @childSay=\"this.$emit('fatherSay')\">\n        <child></child>\n    </father>\n</grandPa>\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// child.vue\nthis.$emit('childSay')\n")])])]),a("h4",{attrs:{id:"event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event","aria-hidden":"true"}},[t._v("#")]),t._v(" $event")]),t._v(" "),a("ul",[a("li",[t._v("对于原生元素（如 button、input）来说，$event 是原始的 DOM 事件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="checkbox"  @change=changeStatus($event,item)>\n\nchangeStatus(event,item){\n\n}\n')])])]),a("blockquote",[a("p",[t._v("如果回调函数只有 event 一个参数，那么 $event 可以省略")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="checkbox"  @change=changeStatus>\n\nchangeStatus(event){\n\n}\n')])])]),a("ul",[a("li",[t._v("对于自定义组件（如 child）来说，$event 是其自身 $emit 发出的第二个参数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    <div id=\"app\">\n        <child @click=\"clickChild(a,$event)\"></child>\n    </div>\n\n    Vue.component('child', {\n        data: function () {\n            return {}\n        },\n        template: '<button @click=\"clickButton\">点我</button>',\n        methods: {\n            clickButton() {\n                this.$emit('click', 1,2) // $emit的第二个参数为$event\n            }\n        }\n    })\n\n    var example1 = new Vue({\n        el: '#app',\n        data: {\n        },\n        methods: {\n            clickChild(e) {\n                console.log(e); // 1，说明$event值为1\n            }\n        }\n    })\n")])])]),a("h4",{attrs:{id:"eventbus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventbus","aria-hidden":"true"}},[t._v("#")]),t._v(" eventBus")]),t._v(" "),a("blockquote",[a("p",[t._v("eventBus 与 $on(),$emit() 同属于发布订阅模式，不同于后者需要依附于某个 vue 实例，eventBus 作为事件中心，独立于各个组件。因此可以利用它实现多组件间通信")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("this.eventBus&&this.eventBus.$emit() // 发布\n\nthis.eventBus&&this.eventBus.$on() // 订阅\n\nthis.eventBus.$off() // 取消订阅\n")])])]),a("h2",{attrs:{id:"异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步")]),t._v(" "),a("p",[t._v("对于")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<g-uploader :fileList.sync="fileList">{{}}</g-uploader>\n\ndata(){\n    fileList:[]\n}\n')])])]),a("p",[t._v("在 uploader 组件中更新 fileList 后，是无法直接获取最新的 fileList")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("props:{\n    fileList:{\n        type:Array\n    }\n}\nlet arr=[{name:'libai'}]\nthis.$emit('update:fileList',arr)\nconsole.log(this.fileList) // []\n")])])]),a("p",[t._v("这是因为父组件获取到更新后的 fileList 是同步的（即sync是同步的），而父组件将更新后的 fileList 传回给子组件是异步的（即vue 的 render 是同步的）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let arr=[{name:'libai'}]\nthis.$emit('update:fileList',arr)\nsetTimeout(()=>{\n    console.log(this.fileList); // [{name:'libai'}]\n})\n")])])]),a("h2",{attrs:{id:"依赖注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入","aria-hidden":"true"}},[t._v("#")]),t._v(" 依赖注入")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// nav\nprovide() {\n    return {\n        root: this\n    }\n}\nmethods:{\n    addItem(){...}\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// nav-item\ninject:['root'],\n\nthis.root.addItem(this) // 调用 nav 的方法\n")])])]),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期","aria-hidden":"true"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/b88572d8f80a",target:"_blank",rel:"noopener noreferrer"}},[t._v("测试"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#created","aria-hidden":"true"}},[t._v("#")]),t._v(" created")]),t._v(" "),a("blockquote",[a("p",[t._v("vue实例被创建,可访问到 data/props")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 类似于\nvar div=document.createElement('div')\n")])])]),a("h4",{attrs:{id:"mounted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounted","aria-hidden":"true"}},[t._v("#")]),t._v(" mounted")]),t._v(" "),a("ol",[a("li",[t._v("vue实例被挂载到真实的DOM节点,如果要执行DOM操作及CSS有关操作，必须在 mounted 中")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 类似于\ndocument.body.appendChild(div)\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("只在组件被挂载到DOM元素上时执行一次，data/props的改变不会触发它")]),t._v(" "),a("li",[t._v("mounted 和 updated\n"),a("ul",[a("li",[t._v("都会重新渲染组件")]),t._v(" "),a("li",[t._v("第一次打开页面/手动刷新页面，会触发 mounted，点击按钮改变组件 state ，触发 updated")]),t._v(" "),a("li",[t._v("mounted 总是伴随着 updated")])])])]),t._v(" "),a("h4",{attrs:{id:"uodated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uodated","aria-hidden":"true"}},[t._v("#")]),t._v(" uodated")]),t._v(" "),a("blockquote",[a("p",[t._v("由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。")])]),t._v(" "),a("h4",{attrs:{id:"beforedestroy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy","aria-hidden":"true"}},[t._v("#")]),t._v(" beforeDestroy")]),t._v(" "),a("blockquote",[a("p",[t._v("在 beforeDestroy 中销毁注册的事件，创建的元素（防止内存泄漏）")])]),t._v(" "),a("h2",{attrs:{id:"v-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for","aria-hidden":"true"}},[t._v("#")]),t._v(" v-for")]),t._v(" "),a("blockquote",[a("p",[t._v("v-for 一定要搭配 key=id")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://jsbin.com/gacokit/8/edit?html,js,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么想删除第一项，结果确实第三项被删除了"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("可以认为在不加 key 的情况下 vue 是按照索引来判断要删除哪些元素的。\n原先的索引")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("0 1 2\n")])])]),a("p",[t._v("删除第一项，重新生成索引后")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("0 1\n")])])]),a("p",[t._v("vue发现少了最后一项，于是把最后一项删除了，导致了bug")]),t._v(" "),a("ul",[a("li",[t._v("一般用 item.id 作为 key（不能:key=index，原因见上）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<li v-for="(item,index) in items" :key=item.id>\n    <child>\n    </child>\n    <button @click="remove(index)">删除</button>\n</li>\n')])])]),a("ul",[a("li",[t._v("如果是 template 的话,key 要加在实际的DOM元素上")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template v-for="item,index in dataSource">\n    <tr :key="item.id">\n    </tr>\n</template>\n')])])]),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),a("ul",[a("li",[t._v("toastPlugin")])]),t._v(" "),a("blockquote",[a("p",[t._v("用于生成和销毁 toast")])]),t._v(" "),a("ul",[a("li",[t._v("validatorPlugin")])]),t._v(" "),a("blockquote",[a("p",[t._v("用于表单验证")])]),t._v(" "),a("h2",{attrs:{id:"指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令","aria-hidden":"true"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),a("blockquote",[a("p",[t._v("用于封装DOM操作")])]),t._v(" "),a("ul",[a("li",[t._v("clickOutside")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div　ref="cascader" @clickOutside="close"></div>\n')])])]),a("blockquote",[a("p",[t._v("点击除 cascader 外的其它位置,则关闭 popover,并自动移除对其它位置的监听")])])])},[],!1,null,null,null);e.default=n.exports}}]);